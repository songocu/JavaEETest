<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">

    <persistence-unit name="examplePersistenceUnit"
                      transaction-type="RESOURCE_LOCAL">

        <class>entities.ids.sequence.EntityIdSequence</class>
        <class>entities.ids.table.EntityIdA</class>
        <class>entities.ids.table.EntityIdB</class>
        <class>entities.ids.listener.EntityIdListener</class>

        <class>entities.inheritance.joined.discriminator.InheritanceJoinedTablesDiscriminatorConcreteClassA</class>
        <class>entities.inheritance.joined.discriminator.InheritanceJoinedTablesDiscriminatorConcreteClassB</class>
        <class>entities.inheritance.joined.discriminator.InheritanceJoinedTablesDiscriminatorSuperClass</class>
        <class>entities.inheritance.joined.InheritanceJoinedTablesConcreteClassA</class>
        <class>entities.inheritance.joined.InheritanceJoinedTablesConcreteClassB</class>
        <class>entities.inheritance.joined.InheritanceJoinedTablesSuperClass</class>
        <class>entities.inheritance.single.table.InheritanceSingleTableConcreteClassA</class>
        <class>entities.inheritance.single.table.InheritanceSingleTableConcreteClassB</class>
        <class>entities.inheritance.single.table.InheritanceSingleTableSuperClass</class>
        <class>entities.inheritance.InheritanceSuperClass</class>

        <class>entities.relationships.embedded.EmbeddableBean</class>
        <class>entities.relationships.embedded.EntityWithEmbeddable</class>

        <class>entities.relationships.many.to.many.list.M</class>
        <class>entities.relationships.many.to.many.list.N</class>
        <class>entities.relationships.many.to.many.map.MMap</class>
        <class>entities.relationships.many.to.many.map.NMap</class>

        <class>entities.relationships.one.to.many.bidirectional.list.Child</class>
        <class>entities.relationships.one.to.many.bidirectional.list.Parent</class>
        <class>entities.relationships.one.to.many.bidirectional.map.ChildMap</class>
        <class>entities.relationships.one.to.many.bidirectional.map.ParentMap</class>
        <class>entities.relationships.one.to.many.strict.ChildStrict</class>
        <class>entities.relationships.one.to.many.strict.ParentStrict</class>
        <class>entities.relationships.one.to.one.bidirectional.A</class>
        <class>entities.relationships.one.to.one.bidirectional.B</class>

        <class>entities.simple.convertors.EntityWithConvertors</class>
        <class>entities.simple.listener.EntityListener</class>
        <class>entities.simple.listener.EntityWithListener</class>
        <class>entities.simple.version.VersionedEntity</class>
        <class>entities.simple.Entity</class>

        <class>queries.named.nativ.NamedNativeQueriesDefinition</class>
        <class>queries.named.nativ.NamedNativeQueriesWithResultSetMappingDefinition</class>
        <class>queries.named.NamedQueriesDefinition</class>

        <class>frameworks.auditable.model.Auditable</class>
        <class>frameworks.auditable.tests.model.AuditableModel</class>

        <class>frameworks.versionable.VersionableEntity</class>
        <class>frameworks.versionable.EntityVersion</class>
        <class>frameworks.versionable.tests.model.Model</class>
        <class>frameworks.versionable.tests.model.ModelVersion</class>

        <exclude-unlisted-classes>true</exclude-unlisted-classes>

        <properties>

            <!-- Echo all executed SQL to stdout -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>

            <!-- Database connection settings -->
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://192.168.186.128/postgres"/>
            <property name="javax.persistence.jdbc.user" value="postgres"/>
            <property name="javax.persistence.jdbc.password" value="sefusefu"/>

            <!-- not 20 connections as default is -->
            <property name="hibernate.connection.pool_size" value="5"/>

            <!-- SQL dialect -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL82Dialect"/>

            <property name="hibernate.hbm2ddl.auto" value="validate"/>

            <!--<property name="javax.persistence.schema-generation.database.action"-->
            <!--value="create"/>-->
            <!--<property name="javax.persistence.schema-generation.database.action"-->
            <!--value="drop-and-create"/>-->

            <!-- generate scripts -->
            <property name="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>
            <property name="javax.persistence.schema-generation.scripts.create-target" value="file:/c://create.sql"/>
            <property name="javax.persistence.schema-generation.scripts.drop-target" value="file:/c://drop.sql"/>

            <!-- seems to be ignored by Hibernate in standard edition usage, to be
                tested in an enterprise edition usage -->
            <property name="javax.persistence.query.timeout" value="1000"/>

        </properties>
    </persistence-unit>
</persistence>