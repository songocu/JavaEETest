<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">

    <persistence-unit name="examplePersistenceUnit"
                      transaction-type="RESOURCE_LOCAL">

        <!-- no need to specify a persistence provider if only 1 is used -->
        <!--<provider></provider>-->

        <class>entities.SimpleEntity</class>
        <class>testenum.Movie</class>
        <class>testDate.DatesPojo</class>
        <class>testConvertors.RectangleEntity</class>
        <class>testListeneri.Person</class>
        <class>testIDS.Animal</class>
        <class>testIDS.TestIDSUsingUUID</class>
        <class>testIDS.AnimalGenerateAutoID</class>
        <class>onetoonerelationship.EmployeeAddressOneToOne</class>
        <class>onetoonerelationship.Employee</class>
        <class>onetoonerelationshipbidirectional.EmployeeBidirectional</class>
        <class>onetoonerelationshipbidirectional.EmployeeAddressOneToOneBidirectional</class>
        <class>onetomany.Department</class>
        <class>onetomany.PersonOneToMany</class>
        <class>onetomanylist.PrintQueue</class>
        <class>onetomanylist.PrintJob</class>
        <class>onetomanymap.DepartmentOneToManyMap</class>
        <class>onetomanymap.PersonOneToManyMap</class>
        <class>manytomanymap.PersonManyToManyMap</class>
        <class>manytomanymap.DepartmentManyToManyMap</class>
        <class>jpanamedquery.Project</class>
        <class>jpanamedquery.Professor</class>
        <class>jpanamedquery.Phone</class>
        <class>jpanamedquery.DepartmentJPA</class>
        <class>jpanamedquery.AddressJPA</class>
        <class>criteriaapi.CriteriaAPIEmployee</class>

        <exclude-unlisted-classes>true</exclude-unlisted-classes>

        <properties>

            <!-- Echo all executed SQL to stdout -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>

            <!-- Database connection settings -->
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:postgresql://localhost:5432/manager"/>
            <property name="javax.persistence.jdbc.user" value="manager"/>
            <property name="javax.persistence.jdbc.password" value="manager"/>

            <!-- not 20 connections as default is -->
            <property name="hibernate.connection.pool_size" value="2"/>

            <!-- SQL dialect -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL82Dialect"/>

            <property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
            <!--<property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>-->

            <!-- generate scripts -->
            <!--<property name="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>-->
            <!--<property name="javax.persistence.schema-generation.scripts.create-target" value="file:/c://create.sql"/>-->
            <!--<property name="javax.persistence.schema-generation.scripts.drop-target" value="file:/c://drop.sql"/>-->

            <!-- seems to be ignored by Hibernate in standard edition usage, to be
                tested in an enterprise edition usage -->
            <property name="javax.persistence.query.timeout" value="100"/>

        </properties>
    </persistence-unit>
</persistence>